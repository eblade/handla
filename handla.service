[Unit]
Description=mat
After=network.target

[Service]
User=mat
Restart=always
Type=simple
CapabilityBoundingSet=
RestrictAddressFamilies=AF_INET
ProtectControlGroups=yes
PrivateTmp=yes
PrivateDevices=yes
PrivateUsers=yes
ProtectControlGroups=yes
#ProtectHome=yes
#ProtectHostname=yes
#ProtectClock=yes
#ProtectKernelLogs=yes
#ProtectKernelModules=yes
#ProtectKernelTunables=yes
#ProtectProc=invisible
ProtectSystem=strict
#ProcSubset=pid
RestrictNamespaces=yes
RestrictRealtime=yes
NoNewPrivileges=yes
MemoryDenyWriteExecute=yes
SystemCallArchitectures=native
LockPersonality=yes
RestrictSUIDSGID=yes
RemoveIPC=yes
UMask=177
SystemCallFilter=~@clock @debug @module @reboot @privileged @cpu-emulation @obsolete @mount @resources
#ReadWritePaths=/var/log/molly/access.log /var/log/molly/error.log 
StandardError=journal
StandardOutput=journal
StandardInput=null
WorkingDirectory=/home/mat/handla
#Environment="PATH=/home/mat/handla/venv/bin"
ExecStart=/home/mat/handla/venv/bin/uvicorn handla:app --host 127.0.0.1 --port 8001

[Install]
WantedBy=multi-user.target

#SELINUX
# semanage fcontext -a -t bin_t '/home/mat/handla/venv/bin/uvicorn'
# restorecon -Fv /home/mat/handla/venv/bin/uvicorn
# semanage fcontext -a -t bin_t '/home/mat/handla/venv/bin/python3'
# restorecon -Fv /home/mat/handla/venv/bin/python3

#NGINX
#    server {
#        listen 443 ssl http2;
#        listen [::]:443 ssl http2;
#        server_name mat.egneblad.se;
#        merge_slashes off;
#
#        location / {
#            proxy_pass http://127.0.0.1:8001$request_uri;
#            proxy_set_header Host $http_host;
#            proxy_buffering off;
#        }
#
#        ssl_certificate /etc/letsencrypt/live/mat.egneblad.se/fullchain.pem;
#        ssl_certificate_key /etc/letsencrypt/live/mat.egneblad.se/privkey.pem;
#        ssl_trusted_certificate /etc/letsencrypt/live/mat.egneblad.se/chain.pem;
#        #include /etc/letsencrypt/options-ssl-nginx.conf;
#    }
